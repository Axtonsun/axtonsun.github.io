<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Axton</title>
    <link>https://axtonsun.github.io/</link>
    <description>Recent content on Axton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2022–2022, Axton; all rights reserved.</copyright>
    <lastBuildDate>Sat, 17 Sep 2022 12:36:30 +0800</lastBuildDate><atom:link href="https://axtonsun.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Contact</title>
      <link>https://axtonsun.github.io/contact/</link>
      <pubDate>Sat, 17 Sep 2022 12:49:22 +0800</pubDate>
      
      <guid>https://axtonsun.github.io/contact/</guid>
      <description> github.com/axtonsun axtonsun </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://axtonsun.github.io/about/</link>
      <pubDate>Sat, 17 Sep 2022 12:48:57 +0800</pubDate>
      
      <guid>https://axtonsun.github.io/about/</guid>
      <description>The One Link for All My Link.
Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>Prompt: Dynamic Data-Partitioning for Distributed Micro-batch Stream Processing Systems</title>
      <link>https://axtonsun.github.io/posts/prompt2020/</link>
      <pubDate>Sat, 17 Sep 2022 12:36:30 +0800</pubDate>
      
      <guid>https://axtonsun.github.io/posts/prompt2020/</guid>
      <description>文献标题：Prompt: Dynamic Data-Partitioning for Distributed Micro-batch Stream Processing Systems 发表时间：2020 作者单位：普渡大学 (Purdue University) 文献类型：会议 期刊名称：SIGMOD / Research 28: Stream Processing 数据来源： A new data partitioning scheme Prompt leverages the charcteristics of the micro-batch processing model
In the batching phase
a frequency-aware buffering mechanism progressively maintains run-time statistics, and provides on- line key-based sorting as data tuples arrive a workload-aware greedy algorithm
partitions the buffered data tuples efficiently for the Map stage In the processing phase</description>
    </item>
    
  </channel>
</rss>
