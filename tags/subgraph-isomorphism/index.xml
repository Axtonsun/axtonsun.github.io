<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>subgraph isomorphism on Axton</title>
    <link>https://axtonsun.github.io/tags/subgraph-isomorphism/</link>
    <description>Recent content in subgraph isomorphism on Axton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2022–2022, Axton; all rights reserved.</copyright>
    <lastBuildDate>Tue, 06 Dec 2022 16:22:39 +0800</lastBuildDate><atom:link href="https://axtonsun.github.io/tags/subgraph-isomorphism/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>软件学报&#39;18 动态图模式匹配技术综述</title>
      <link>https://axtonsun.github.io/posts/dynamicgraphpatternmatching2018/</link>
      <pubDate>Tue, 06 Dec 2022 16:22:39 +0800</pubDate>
      
      <guid>https://axtonsun.github.io/posts/dynamicgraphpatternmatching2018/</guid>
      <description>图(graph)作为一种广泛使用的数据结构，非常适合刻画这种存在内在关联性的数据，图中的每个节点代表现实世界中的实体对象，节点之间的边表示实体之间的关系。
动态图模式匹配技术(dynamic graph pattern matching techniques)是分析动态图数据上高效查询的重要手段，广泛应用于众多重要领域。
动态图模式匹配技术是指在一个实时更新的图中找到与给定模式图相匹配的子图，这里的匹配是指结构相同以及满足特定的语义关系等。
现有动态图数据匹配相关研究工作主要从以下几个方面展开：
针对动态图数据频繁更新的特性，研究增量处理技术，仅对动态图数据更新的部分进行分析和匹配； 针对动态图数据规模大的特性，研究如何利用分布式并行图处理框架，来加速动态图的匹配计算； 针对动态图分析实时性要求高的特性，除了综合运用增量处理技术和分布式并行图处理框架降低匹配处理时延之外，还有学者研究图匹配的近似计算技术，在求解时延和匹配结果假阳性错误率之间做权衡。 1. 动态图匹配问题的定义和分类 1.1 基本动态图匹配问题 通常用三元组\((V,E,L)\)对图数据进行形式化描述，其中\(V\)表示图中节点的集合，\(E\)表示图中边的集合，对于任意一条边\(e\in E\)，由节点\((v_i,v_j)\)构成，其中\(v_i,v_j\in V\)。图中的边和节点可以带有属性信息，\(L\)表示属性映射函数，将节点或边映射到一个或一组属性上。用符号 \(G,P,u,v\)分别表示数据图、模式图(或查询图)、单个数据图节点和单个模式图节点。 目前业界所使用的数据图\(G\)的类型可以分为两种：第一种数据图是超大图，第二种数据图是由大量的小图组成。 动态图又称图流(graph streams)，是指会随时间发生变化的图。
动态图的更新形式可分为以下两类：
图结构更新，随着时间推移，图数据中的节点和边会被插入和删除，从而导致图数据的结构发生变化； 图内容更新，随着时间推移，图数据中的节点和边所关联的数据对象的内容或属性会发生改变，从而导致图数据的内容发生变化。 1.1.1 图结构更新 定义1. 动态图
已知初始数据图\(G\)，引发数据图更新的操作可以用三元组\(\left \langle op,u_i,u_j \right \rangle\) 表示。其中，\(op=\{I,D\}\)表示操作类型，\(op=I\)时表示增加边操作，\(op=D\)时表示删除边操作；\(u_i\)和\(u_j\)表示数据图中与操作\(op\)相关的两个图节点。若用更新操作集合 \(GC_t = \left \{ \left \langle op_1,u_1,u_2 \right \rangle,...,\left \langle op_k,u_k,u_{k+1} \right \rangle \right \}\left ( k\ge 1 \right )\)表示数据图\(G\)在\(t\)时刻的所有更新操作，用 \(GC:G→G&#39;\)表示数据图\(G\)基于更新操作集合\(GC\)更新后得到新数据图\(G&#39;\)的过程，则时间域\([0,T]\)上的动态图\(G_{D}^{[0,T]}\)是一个数据图序列，定义为 $$ G_{D}^{[0,T]}=\{ G_0,G_1,G_2,&amp;hellip;,G_T \} $$
$$ G_0=G,GC_0=\phi,GC_t:G_{t-1}\to G_t\left ( 1 \le t \le T \right ) $$</description>
    </item>
    
    <item>
      <title>计算机研究与发展&#39;15 大规模图数据匹配技术综述</title>
      <link>https://axtonsun.github.io/posts/graphpatternmatching2015/</link>
      <pubDate>Mon, 05 Dec 2022 23:04:15 +0800</pubDate>
      
      <guid>https://axtonsun.github.io/posts/graphpatternmatching2015/</guid>
      <description>图作为一种广泛应用的数据结构，非常适合刻画这种具有内在关联性的数据，许多领域的问题都可以通过图的相关理论和技术解决，例如社交网络与Web网络分析、推荐系统、社会安全分析、生物数据分析等。
图模式匹配技术(graph pattern matching)作为实现图数据上高效查询的重要手段，广泛应用于上述各领域的实际问题中。
面对海量关联数据带来的新挑战，各大公司纷纷提出了图数据处理的并行计算模型和系统，包括谷歌公司的大规模图数据处理系统Pregel1、微软研究院的大规模分布式图数据查询(querying large distributed graphs)系统2以及CMU Select实验室研发的GraphLab系统3，这些系统采用分布式计算等技术支持大规模图数据上的高效匹配、查询等算法。
对千万级甚至更大规模的图数据进行高效、准确的匹配查询仍然面临一些问题：
匹配问题复杂 子图同构(subgraph isomorphism)问题属于NP-Complete问题4 措施 设计更高效的搜索算法 采用近似算法 数据规模巨大 采用数据挖掘等技术提取图中的路径、树、子图作为索引特征 数据更新频繁 引入增量处理技术 在所有图匹配问题中，子图同构(subgraph isomorphism)是需要解决的基本问题。
1.图匹配问题 基本的图匹配问题与定义 定义三元组\((V,E,L)\)表示一个图，其中\(V\)表示图中节点的集合，$E$表示图中边的集合，对于任意一条边\(e\in E\)，由节点\((v_i,v_j)\)构成，其中\(v_i,v_j\in V\)。图中的边喝节点可以带有属性信息，\(L\)表示属性 映射函数，将节点或边映射到一个或一组属性上。 一个数据图与模式图的精确匹配问题称为子图同构，需要在数据图中搜索出与模式图在结构和节点与边属性上完全匹配的子图。
精确图匹配问题需要在数据图中找到所有满足上述条件的子图作为模式图的匹配结果。
扩展的图匹配问题 结构匹配和语义匹配
图匹配问题按图数据是否在节点和边上包含语义信息分为语义匹配和结构匹配。
图匹配的许多前期研究基于严格的图结构相似性，即保证所匹配的节点周围具有相同的连通结构，这种匹配问题称为结构匹配，主要应用于化学物质相似结构的检测。
结构匹配的代表性算法包括1976年最早提出的Ullmann算法5以及近年来在该算法基础上改进的VF26，QuickSI7，GraphQL8，Spath9等算法。
在匹配这类图数据时，需要同时保证匹配结果在结构和语义信息上与模式图一致，这种匹配问题称为语义匹配。如典型的GraphGrep10算法。
精确匹配和近似匹配
图匹配问题按匹配结果是否要求与模式图完全一致分为精确匹配和近似匹配。
精确匹配指匹配的结果和模式图的结构及属性完全一致，这种匹配方式主要应用于对匹配结果的准确率要求较高的领域，包括生物数据分析、社会安全分析等，前面介绍的结构匹配算法和语义匹配算法都属于典型的精确匹配技术。
近似匹配是一种可以容忍结果中存在一定噪声和错误的匹配算法，代表性的近似匹配算法包括SUBDUE11，LAW12等，主要通过定义编辑距离、最大公共子图(minium common subgraph)、最小公共超图(minimum common supergraph)等方法衡量两个图的相似程度。
静态图匹配和动态图匹配
图匹配问题按数据图是否更新分为动态图匹配和静态图匹配。
静态图匹配要求所有的数据图不随着时间推移而变化，GIndex13是最有代表性的静态图匹配算法，后续还有FG-Index14，Tree+delta15等算法。
动态图匹配能够在图数据更新时满足实时匹配的性能需求。主要采用增量处理技术，仅对更新的数据图进行分析，代表性工作包括文献161718。
最优算法和近似算法
图匹配算法按是否能获得准确结果分为最优算法和近似算法
最优算法保证匹配结果完全精确，例如精确匹配问题的最优算法可以保证计算结果与模式图完全同构，近似匹配问题的最优算法获得与模式图最近似的一系列匹配结果。
近似算法不同于近似匹配，近似算法通常基于概率统计等数学模型，非常适合动态图匹配等对算法实时性要求较高且只需满足一定准确率的匹配问题。
2.精确图匹配技术 Exact Graph Pattern Matching Non-index-based Matching Ullmann(1976) VF2(2001) GraphQL(2008) GADDI(2009) Spath(2010) Index-based Matching Non-mining-based Matching GraphGrep(2002) CTree(2006) GCoding(2008) Mining-based Matching GIndex(2004) FG-Index(2007) Tree-Delta(2007) 无索引的匹配技术 精确图匹配是一种NP完全问题，算法设计时利用图中的结构和语义信息可以有效提高图匹配的性能。</description>
    </item>
    
  </channel>
</rss>
